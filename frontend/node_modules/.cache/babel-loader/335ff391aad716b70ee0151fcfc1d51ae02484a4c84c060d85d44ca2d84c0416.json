{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_BACKEND_URL||'http://localhost:10000/api';// Ensure this matches your backend port\nexport const generateQuestion=async function(userInput){let productId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let sessionId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'default_session_id';try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/generate-question\"),{userInput,productId},{headers:{'X-Session-ID':sessionId// Pass session ID in headers\n}});return response.data;}catch(error){if(axios.isAxiosError(error)&&error.response){throw new Error(error.response.data.error||'Failed to generate question');}throw new Error('Network error or unexpected issue');}};export const getProductReport=async productId=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/products/\").concat(productId));return response.data;}catch(error){if(axios.isAxiosError(error)&&error.response){throw new Error(error.response.data.error||'Failed to fetch product report');}throw new Error('Network error or unexpected issue');}};export const listAllProducts=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/products\"));return response.data;}catch(error){if(axios.isAxiosError(error)&&error.response){throw new Error(error.response.data.error||'Failed to list products');}throw new Error('Network error or unexpected issue');}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","generateQuestion","userInput","productId","arguments","length","undefined","sessionId","response","post","concat","headers","data","error","isAxiosError","Error","getProductReport","get","listAllProducts"],"sources":["C:/Users/Monica/Downloads/altibbe/my-prototype-altibbe/frontend/src/api/chat.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { ChatResponse } from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:10000/api'; // Ensure this matches your backend port\r\n\r\nexport const generateQuestion = async (\r\n    userInput: string,\r\n    productId: string | null = null,\r\n    sessionId: string = 'default_session_id' // A simple session ID for now\r\n): Promise<ChatResponse> => {\r\n    try {\r\n        const response = await axios.post<ChatResponse>(`${API_BASE_URL}/generate-question`, {\r\n            userInput,\r\n            productId,\r\n        }, {\r\n            headers: {\r\n                'X-Session-ID': sessionId, // Pass session ID in headers\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            throw new Error(error.response.data.error || 'Failed to generate question');\r\n        }\r\n        throw new Error('Network error or unexpected issue');\r\n    }\r\n};\r\n\r\nexport const getProductReport = async (productId: string) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/products/${productId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            throw new Error(error.response.data.error || 'Failed to fetch product report');\r\n        }\r\n        throw new Error('Network error or unexpected issue');\r\n    }\r\n};\r\n\r\nexport const listAllProducts = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/products`);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error) && error.response) {\r\n            throw new Error(error.response.data.error || 'Failed to list products');\r\n        }\r\n        throw new Error('Network error or unexpected issue');\r\n    }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,EAAI,4BAA4B,CAAE;AAExF,MAAO,MAAM,CAAAC,gBAAgB,CAAG,cAAAA,CAC5BC,SAAiB,CAGO,IAFxB,CAAAC,SAAwB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,IAC/B,CAAAG,SAAiB,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,oBAAoB,CAExC,GAAI,CACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,IAAI,IAAAC,MAAA,CAAkBb,YAAY,uBAAsB,CACjFK,SAAS,CACTC,SACJ,CAAC,CAAE,CACCQ,OAAO,CAAE,CACL,cAAc,CAAEJ,SAAW;AAC/B,CACJ,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACI,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZ,GAAIjB,KAAK,CAACkB,YAAY,CAACD,KAAK,CAAC,EAAIA,KAAK,CAACL,QAAQ,CAAE,CAC7C,KAAM,IAAI,CAAAO,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,EAAI,6BAA6B,CAAC,CAC/E,CACA,KAAM,IAAI,CAAAE,KAAK,CAAC,mCAAmC,CAAC,CACxD,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAO,CAAAb,SAAiB,EAAK,CACzD,GAAI,CACA,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACqB,GAAG,IAAAP,MAAA,CAAIb,YAAY,eAAAa,MAAA,CAAaP,SAAS,CAAE,CAAC,CACzE,MAAO,CAAAK,QAAQ,CAACI,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZ,GAAIjB,KAAK,CAACkB,YAAY,CAACD,KAAK,CAAC,EAAIA,KAAK,CAACL,QAAQ,CAAE,CAC7C,KAAM,IAAI,CAAAO,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,EAAI,gCAAgC,CAAC,CAClF,CACA,KAAM,IAAI,CAAAE,KAAK,CAAC,mCAAmC,CAAC,CACxD,CACJ,CAAC,CAED,MAAO,MAAM,CAAAG,eAAe,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACqB,GAAG,IAAAP,MAAA,CAAIb,YAAY,aAAW,CAAC,CAC5D,MAAO,CAAAW,QAAQ,CAACI,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZ,GAAIjB,KAAK,CAACkB,YAAY,CAACD,KAAK,CAAC,EAAIA,KAAK,CAACL,QAAQ,CAAE,CAC7C,KAAM,IAAI,CAAAO,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,EAAI,yBAAyB,CAAC,CAC3E,CACA,KAAM,IAAI,CAAAE,KAAK,CAAC,mCAAmC,CAAC,CACxD,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}